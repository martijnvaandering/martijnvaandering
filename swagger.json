{"swagger":"2.0","info":{"version":"1.0.0","title":"UniqueProductsAPI"},"basePath":"/api","consumes":["application/json","application/x-www-form-urlencoded","application/xml","text/xml"],"produces":["application/json","application/xml","text/xml","application/javascript","text/javascript"],"paths":{"/Users/{id}/accessTokens/{fk}":{"get":{"tags":["User"],"summary":"Find a related item by id for accessTokens.","operationId":"User.prototype.__findById__accessTokens","parameters":[{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a related item by id for accessTokens.","operationId":"User.prototype.__destroyById__accessTokens","parameters":[{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false},"put":{"tags":["User"],"summary":"Update a related item by id for accessTokens.","operationId":"User.prototype.__updateById__accessTokens","parameters":[{"name":"fk","in":"path","description":"Foreign key for accessTokens","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false}},"/Users/{id}/accessTokens":{"get":{"tags":["User"],"summary":"Queries accessTokens of User.","operationId":"User.prototype.__get__accessTokens","parameters":[{"name":"filter","in":"query","required":false,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/AccessToken"}}}},"deprecated":false},"post":{"tags":["User"],"summary":"Creates a new instance in accessTokens of this model.","operationId":"User.prototype.__create__accessTokens","parameters":[{"name":"data","in":"body","required":false,"schema":{"$ref":"#/definitions/AccessToken"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/AccessToken"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Deletes all accessTokens of this model.","operationId":"User.prototype.__delete__accessTokens","parameters":[{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/{id}/accessTokens/count":{"get":{"tags":["User"],"summary":"Counts accessTokens of User.","operationId":"User.prototype.__count__accessTokens","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users":{"post":{"tags":["User"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"User.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.upsert__patch_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"User.upsert__put_Users","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"User.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}},"deprecated":false}},"/Users/replaceOrCreate":{"post":{"tags":["User"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"User.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/exists":{"get":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__get_Users_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Users/{id}":{"head":{"tags":["User"],"summary":"Check whether a model instance exists in the data source.","operationId":"User.exists__head_Users_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["User"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"User.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"delete":{"tags":["User"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"User.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.updateAttributes__patch_Users_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/User"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false},"put":{"tags":["User"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"User.prototype.updateAttributes__put_Users_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/User"}},{"name":"id","in":"path","description":"User id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/{id}/replace":{"post":{"tags":["User"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"User.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/findOne":{"get":{"tags":["User"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"User.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/User"}}},"deprecated":false}},"/Users/update":{"post":{"tags":["User"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"User.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Users/count":{"get":{"tags":["User"],"summary":"Count instances of the model matched by where from the data source.","operationId":"User.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Users/change-stream":{"post":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__post_Users_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["User"],"summary":"Create a change stream.","operationId":"User.createChangeStream__get_Users_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}},"/Users/login":{"post":{"tags":["User"],"summary":"Login a user with username/email and password.","operationId":"User.login","parameters":[{"name":"credentials","in":"body","required":true,"schema":{"type":"object"}},{"name":"include","in":"query","description":"Related objects to include in the response. See the description of return value for more details.","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The response body contains properties of the AccessToken created on login.\nDepending on the value of `include` parameter, the body may contain additional properties:\n\n  - `user` - `U+007BUserU+007D` - Data of the currently logged in user. (`include=user`)\n\n","type":"object"}}},"deprecated":false}},"/Users/logout":{"post":{"tags":["User"],"summary":"Logout a user with access token.","operationId":"User.logout","parameters":[],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/confirm":{"get":{"tags":["User"],"summary":"Confirm a user registration with email verification token.","operationId":"User.confirm","parameters":[{"name":"uid","in":"query","required":true,"type":"string"},{"name":"token","in":"query","required":true,"type":"string"},{"name":"redirect","in":"query","required":false,"type":"string"}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Users/reset":{"post":{"tags":["User"],"summary":"Reset password for a user with email.","operationId":"User.resetPassword","parameters":[{"name":"options","in":"body","required":true,"schema":{"type":"object"}}],"responses":{"204":{"description":"Request was successful"}},"deprecated":false}},"/Items":{"post":{"tags":["Item"],"summary":"Create a new instance of the model and persist it into the data source.","operationId":"Item.create","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Item"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false},"patch":{"tags":["Item"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Item.upsert__patch_Items","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Item"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false},"put":{"tags":["Item"],"summary":"Patch an existing model instance or insert a new one into the data source.","operationId":"Item.upsert__put_Items","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Item"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false},"get":{"tags":["Item"],"summary":"Find all instances of the model matched by filter from the data source.","operationId":"Item.find","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"array","items":{"$ref":"#/definitions/Item"}}}},"deprecated":false}},"/Items/replaceOrCreate":{"post":{"tags":["Item"],"summary":"Replace an existing model instance or insert a new one into the data source.","operationId":"Item.replaceOrCreate","parameters":[{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Item"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false}},"/Items/{id}/exists":{"get":{"tags":["Item"],"summary":"Check whether a model instance exists in the data source.","operationId":"Item.exists__get_Items_{id}_exists","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false}},"/Items/{id}":{"head":{"tags":["Item"],"summary":"Check whether a model instance exists in the data source.","operationId":"Item.exists__head_Items_{id}","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"exists":{"type":"boolean"}}}}},"deprecated":false},"get":{"tags":["Item"],"summary":"Find a model instance by {{id}} from the data source.","operationId":"Item.findById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"filter","in":"query","description":"Filter defining fields and include","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false},"delete":{"tags":["Item"],"summary":"Delete a model instance by {{id}} from the data source.","operationId":"Item.deleteById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object"}}},"deprecated":false},"patch":{"tags":["Item"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Item.prototype.updateAttributes__patch_Items_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Item"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false},"put":{"tags":["Item"],"summary":"Patch attributes for a model instance and persist it into the data source.","operationId":"Item.prototype.updateAttributes__put_Items_{id}","parameters":[{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Item"}},{"name":"id","in":"path","description":"PersistedModel id","required":true,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false}},"/Items/{id}/replace":{"post":{"tags":["Item"],"summary":"Replace attributes for a model instance and persist it into the data source.","operationId":"Item.replaceById","parameters":[{"name":"id","in":"path","description":"Model id","required":true,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"Model instance data","required":false,"schema":{"$ref":"#/definitions/Item"}}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false}},"/Items/findOne":{"get":{"tags":["Item"],"summary":"Find first instance of the model matched by filter from the data source.","operationId":"Item.findOne","parameters":[{"name":"filter","in":"query","description":"Filter defining fields, where, include, order, offset, and limit","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"$ref":"#/definitions/Item"}}},"deprecated":false}},"/Items/update":{"post":{"tags":["Item"],"summary":"Update instances of the model matched by {{where}} from the data source.","operationId":"Item.updateAll","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"},{"name":"data","in":"body","description":"An object of model property name/value pairs","required":false,"schema":{"$ref":"#/definitions/Item"}}],"responses":{"200":{"description":"Request was successful","schema":{"description":"The number of instances updated","type":"object"}}},"deprecated":false}},"/Items/count":{"get":{"tags":["Item"],"summary":"Count instances of the model matched by where from the data source.","operationId":"Item.count","parameters":[{"name":"where","in":"query","description":"Criteria to match model instances","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"object","properties":{"count":{"type":"number","format":"double"}}}}},"deprecated":false}},"/Items/change-stream":{"post":{"tags":["Item"],"summary":"Create a change stream.","operationId":"Item.createChangeStream__post_Items_change-stream","parameters":[{"name":"options","in":"formData","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false},"get":{"tags":["Item"],"summary":"Create a change stream.","operationId":"Item.createChangeStream__get_Items_change-stream","parameters":[{"name":"options","in":"query","required":false,"type":"string","format":"JSON"}],"responses":{"200":{"description":"Request was successful","schema":{"type":"file"}}},"deprecated":false}}},"definitions":{"x-any":{"properties":{}},"AccessToken":{"properties":{"id":{"type":"string"},"ttl":{"default":1209600,"description":"time to live in seconds (2 weeks by default)","type":"number","format":"double"},"created":{"type":"string","format":"date"},"userId":{"$ref":"#/definitions/ObjectID"}},"required":["id"],"additionalProperties":false},"User":{"properties":{"realm":{"type":"string"},"username":{"type":"string"},"credentials":{"type":"object"},"challenges":{"type":"object"},"email":{"type":"string"},"emailVerified":{"type":"boolean"},"status":{"type":"string"},"created":{"type":"string","format":"date"},"lastUpdated":{"type":"string","format":"date"},"id":{"$ref":"#/definitions/ObjectID"}},"required":["email"],"additionalProperties":false},"Item":{"properties":{"CustomerCode":{"type":"string"},"ItemCode":{"type":"string"},"Reference":{"type":"string"},"OfferReference":{"type":"string"},"Description1":{"type":"string"},"Description2":{"type":"string"},"Quantity":{"type":"number","format":"double"},"IsPF":{"type":"boolean"},"GrossSalesPrice":{"type":"number","format":"double"},"NetSalesPrice":{"type":"number","format":"double"},"Comments":{"type":"string"},"Creator":{"type":"string"},"CreationDate":{"type":"string","format":"date"},"Liko":{"type":"string"},"BonusFactor":{"type":"number","format":"double"},"Documents":{"type":"array","items":{"type":"string"}},"id":{"$ref":"#/definitions/ObjectID"}},"required":["CustomerCode","Creator","CreationDate","Liko"],"additionalProperties":false},"ObjectID":{"type":"string","pattern":"^[a-fA-F\\d]{24}$"}},"tags":[{"name":"User"},{"name":"Item"}]}